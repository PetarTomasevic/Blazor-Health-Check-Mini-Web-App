@page "/urlapisettings"
@inject SystemHealthChecks.Domain.Services.ApiHealthCheck.UrlApiHealthCheckQueries  urlApiQueries
@inject SystemHealthChecks.Domain.Services.ApiHealthCheck.UrlApiHealthCheckCommands urlApiCommands
@using SystemHealthChecks.Infrastructure.Entities

<h3>Url Api List</h3>
<AuthorizeView>
    <Authorized>
        <div class="card">
            <div style="text-align: end;padding: 5px;">
                <button class="btn btn-primary" @onclick="@AddUrlApi">Add URL Api</button>
            </div>
            <div style="float:right; width:80%;padding:5px;">
                <div class="col-sm-6" style="float:left">
                    <input class="form-control" type="text" placeholder="Search" @bind=searchString />
                </div>
                <div>
                    <button type="submit" class="btn btn-default btn-info" @onclick="@(e=>FilterUrlApi())">Filter</button>
                </div>
            </div>
        </div>
        <div class="card">

            @if (filterUrlApiList == null)
            {

                <p><em>Loading...</em></p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var urlApi in filterUrlApiList)
                    {
                        <li class="list-group-item">
                            <div>
                                @urlApi.Description
                            </div>
                            <div>
                                @urlApi.HostUrl
                            </div>
                            <div>
                                <button class="btn btn-default" style="float:right;display:block;" @onclick="@(e=>EditUrlApi(urlApi.Id))">Edit</button>
                                <button class="btn btn-danger" style="float:right;display:block;" @onclick="@(e=>DeleteConfirm(urlApi.Id))">Delete</button>
                            </div>

                        </li>
                    }
                </ul>
            }
        </div>
        @if (isAdd)
        {
            <div class="modal" tabindex="-1" style="display:block" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title">@modalTitle</h3>
                            <button type="button" class="close" @onclick="@closeModal">
                                <span aria-hidden="true">X</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <form>
                                <div class="form-group">
                                    <label for="Name" class="control-label">URL Name</label>
                                    <input for="Name" class="form-control" @bind="urlApi.Description" />
                                </div>
                                <div class="form-group">
                                    <label for="Name" class="control-label">Host Url</label>
                                    <input for="Name" class="form-control" @bind="urlApi.HostUrl" />
                                </div>
                                <div class="form-group">
                                    <label for="Name" class="control-label">Api Path</label>
                                    <input for="Name" class="form-control" @bind="urlApi.TestApiPath" />
                                </div>


                            </form>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-block btn-info" @onclick="@(e=>SaveUrlApi(urlApi))" data-dismiss="modal">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (isDelete)
        {
            <div class="modal" tabindex="-1" style="display:block" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title">Delete Url Api</h3>
                        </div>
                        <div class="modal-body">
                            <h4>Do you want to delete this Url Api ??</h4>
                            <table class="table">
                                <tr>
                                    <td>Description</td>
                                    <td>
                                        <input type="hidden" @bind="@urlApi.Id" />
                                        @urlApi.Description
                                    </td>


                                </tr>
                                <tr>
                                    <td>Host Url</td>
                                    <td>@urlApi.HostUrl</td>
                                </tr>
                                <tr>
                                    <td>Test Api Path</td>
                                    <td>@urlApi.TestApiPath</td>
                                </tr>
                            </table>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-danger" @onclick="@(e=>DeleteUrlApi(urlApi.Id))" data-dismiss="modal">YES</button>
                            <button class="btn btn-warning" @onclick="@closeModal">NO</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <h1>Authentication Failure!</h1>
        <p>You're not signed in.</p>
    </NotAuthorized>
</AuthorizeView>

@functions {
    private List<UrlApiHealthCheck> urlApiList;
    private List<UrlApiHealthCheck> filterUrlApiList;
    private UrlApiHealthCheck urlApi;
    protected Boolean isDelete = false;
    protected Boolean isAdd = false;
    protected UrlApiHealthCheck db = new UrlApiHealthCheck();
    protected string modalTitle { get; set; } = "";
    public string searchString { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        await getUriApi();

    }

    protected async Task getUriApi()
    {
        urlApiList = await urlApiQueries.GetListUrlApiHealthCheck();
        filterUrlApiList = urlApiList;
    }
    protected async Task EditUrlApi(int urlApiId)
    {
        urlApi = await urlApiQueries.GetUrlApiHealthCheck(urlApiId);
        this.modalTitle = "Edit Url Api";
        this.isAdd = true;
    }

    protected async Task DeleteUrlApi(int urlApiId)
    {
        await Task.Run(() =>
        {
            urlApiCommands.DeleteUrlApiHealthCheck(urlApiId);
        });
        await getUriApi();
        this.isDelete = false;

    }
    protected async Task DeleteConfirm(int dbId)
    {
        urlApi = await urlApiQueries.GetUrlApiHealthCheck(dbId);
        this.isDelete = true;
    }

    protected void closeModal()
    {
        this.isAdd = false;
        this.isDelete = false;
    }
    protected async Task FilterUrlApi()
    {
        filterUrlApiList = urlApiList.Where(x => x.Description.IndexOf(searchString, StringComparison.OrdinalIgnoreCase) != -1).ToList();
    }



    protected async Task SaveUrlApi(UrlApiHealthCheck urlApi)
    {

        if (urlApi.Id != 0)
        {
            await Task.Run(() =>
            {
                urlApiCommands.UpdateUrlApiHealthCheck(urlApi);
            });
        }
        else
        {
            await Task.Run(() =>
            {
                urlApiCommands.NewUrlApiHealthCheck(urlApi);
            });
        }
        this.isAdd = false;
        await getUriApi();
    }

    protected void AddUrlApi()
    {
        urlApi = new UrlApiHealthCheck();
        this.modalTitle = "Add Url Api";
        this.isAdd = true;
    }
}
